name: Acceptance-Tests

on:
  push:
    branches:
      - main  # Run on pushes made into the main branch
  pull_request:
    branches:
      - main  # Run on pull requests targeting the main branch

jobs:
  pre_commit_pylint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint  # Add this line to install pylint

      - name: Install pre-commit
        run: |
          pip install pre-commit

      - name: Run pre-commit checks
        run: |
          pre-commit run --all-files  # Run pre-commit checks

      - name: Run pylint checks
        run: |
          pylint **/*.py --max-line-length=120 --exit-zero # Ensure pylint runs on Python files in all directories


  unit_tests:
    needs: pre_commit_pylint  # This job depends on the completion of pre_commit_pylint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install werkzeug==1.0.1
          pip install --upgrade flask  # Ensure Flask is up-to-date

      - name: Run unit tests
        run: |
          pytest test_model.py --maxfail=1 --disable-warnings -q  # Run unit tests
        continue-on-error: false  # Ensure the workflow fails if unit tests fail

  happy_sad_path_tests:
    needs: unit_tests  # This job depends on the completion of unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install werkzeug==1.0.1
          pip install --upgrade flask  # Ensure Flask is up-to-date

      - name: Run happy path and sad path tests
        run: |
          pytest test_integration_happy.py test_integration_sad.py --maxfail=1 --disable-warnings -q  # Run happy and sad path tests
        continue-on-error: false  # Ensure the workflow fails if these tests fail

  acceptance_tests:
    needs: happy_sad_path_tests  # This job depends on the completion of happy_sad_path_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install werkzeug==1.0.1
          pip install --upgrade flask  # Ensure Flask is up-to-date

      - name: Run acceptance tests
        run: |
          pytest test_acceptance_happy.py test_acceptance_sad.py test_acceptance_edge_cases.py --maxfail=1 --disable-warnings -q  # Run acceptance tests
        continue-on-error: false  # Ensure the workflow fails if these tests fail

  # Upload Python Wheel Package Job
  upload_python_package:
    needs: acceptance_tests  # This job depends on the completion of acceptance_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Python Wheel
        run: |
          python setup.py bdist_wheel  # Example build command
          ls dist  # Check that the .whl file is built

      - name: Upload Python Wheel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package  # Same name as used in download step
          path: ./dist/*.whl  # Path to the .whl file

  install_python_package:
    needs: upload_python_package  # Make sure it depends on the upload job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Download the artifact containing the .whl file
      - name: Download Python Wheel Artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package  # Ensure this matches the uploaded name

      # List the files to verify the downloaded artifact
      - name: List downloaded files
        run: |
          ls -R ./  # List all files recursively to find the .whl file

      # Install the Python wheel package
      - name: Install Python Wheel Package
        run: |
          pip install ./python-package/*.whl  # Install the downloaded .whl package

